<!doctype html>
<html class="no-js" lang="en">


<!-- Mirrored from htmldemo.net/toro/toro/login-register.html by HTTrack Website Copier/3.x [XR&CO'2014], Sat, 02 Mar 2024 15:19:46 GMT -->
<head>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>Toro - Minimal eCommerce HTML Template</title>
    <meta name="robots" content="noindex, follow" />
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="asset/images/favicon.png">

    <!-- All CSS is here
	============================================ -->

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/asset/css/vendor/bootstrap.min.css">
    <!-- Icon Font CSS -->
    <link rel="stylesheet" href="/asset/css/vendor/font-awesome.css">
    <link rel="stylesheet" href="/asset/css/vendor/dlicon.css">
    <!-- Others CSS -->
    <link rel="stylesheet" href="/asset/css/plugins/owl-carousel.css">
    <link rel="stylesheet" href="/asset/css/plugins/slick.css">
    <link rel="stylesheet" href="/asset/css/plugins/magnific-popup.css">
    <link rel="stylesheet" href="/asset/css/plugins/jarallax.css">
    <link rel="stylesheet" href="/asset/css/plugins/easyzoom.css">
    <link rel="stylesheet" href="/asset/css/plugins/animate.css">
    <link rel="stylesheet" href="/asset/css/plugins/fullpage.css">
    <link rel="stylesheet" href="/asset/css/plugins/jquery-ui.css">
    <link rel="stylesheet" href="/asset/css/plugins/select2.min.css">
    <link rel="stylesheet" href="/asset/css/style.css">

</head>
<body>
    <div class="login-register-area pt-95 pb-100">
        <div class="container-fluid" style="background-color: #f9f6f5;">
            <div class="row d-flex justify-content-center">
                <div class="col-lg-4 col-md-4 border border-secondary p-5" style="background-color: white;">
                    <div class="login-register-wrap">
                        <h3 class="d-flex justify-content-center"><i class="fa fa-user-o"></i> OTP Verification</h3>
                        <br>
                        <div class="login-register-form">
                            <form action="/otp" method="post">
                                <div class="sin-login-register">
                                    <label class="d-flex justify-content-center">Enter OTP Code <span>*</span></label>
                                   
                                    <br>
                                    <div class="input-field colo d-flex">
                                        <input class="m-2" name="otp1"  type="number" required />
                                        <input class="m-2" name="otp2"  type="number" required disabled />
                                        <input class="m-2" name="otp3"  type="number"  required disabled/>
                                        <input class="m-2" name="otp4"  type="number" required disabled />
                                    </div>
                                </div>
                                <div class="text-danger d-flex justify-content-center">
                                    <h6 class="text-danger "><%=locals.msg%></h6>
                                    </div>

                                <div class="d-flex justify-content-center" id="timer"></div>
                                


                                <div class="d-flex justify-content-center" id="resendButtonContainer" style="display: none;">
                                    <br><br>
                                    <h5>Did'nt get the otp? <a href="/ResendOtp" id="resendButton" onclick="resendOTP()">Resend</a></h5>
                                </div>
                                <br>
                                <div class="login-register-btn-remember d-flex justify-content-center">
                                    <div class="login-register-btn">
                                        <div class="d-flex justify-content-center">
                                        <button type="submit">Verify OTP</button>
                                       
                                    </div>
                                        
                                    </div>
                                </div>
                                <br>
                            
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div> 


    <style>

.colo>input{
text-align: center;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
    display: none;
}
    </style>

<!-- <script>
 

 const inputs = document.querySelectorAll("input"),
    button = document.querySelector("button");

    inputs.forEach((input, index1) => {
        input.addEventListener("keyup", (e) => {
            const currentInput = input,
            nextInput = input.nextElementSibling,
            prevInput = input.previousElementSibling;

            if (currentInput.value.length > 1) {
                currentInput.value = "";
                return;
            }

            if (nextInput && nextInput.hasAttribute("disabled") && currentInput.value !== "") {
                nextInput.removeAttribute("disabled");
                nextInput.focus();
            }


            if (e.key === "Backspace") {

                inputs.forEach((input, index2) => {

                if (index1 <= index2 && prevInput) {
                        input.setAttribute("disabled", true);
                        input.value = "";
                        prevInput.focus();
                    }
                });
            }

            if (!inputs[3].disabled && inputs[3].value !== "") {
                button.classList.add("active");
                return;
            }
            button.classList.remove("active");
        });
    });


    window.addEventListener("load", () => inputs[0].focus());





function initTimer(durationInSeconds) {
    const display = document.querySelector('#otpTimer');
    startTimer(durationInSeconds, display);

    toggleResendButton(false);
}

function toggleResendButton(enabled) {
    const resendButton = document.getElementById('resendButton');
    resendButton.style.pointerEvents = enabled ? 'auto' : 'none';
}

function startTimer(duration, display) {
    let timer = duration, minutes, seconds;
    const intervalId = setInterval(function () {
        minutes = parseInt(timer / 60, 10);
        seconds = parseInt(timer % 60, 10);

        minutes = minutes < 10 ? '0' + minutes : minutes;
        seconds = seconds < 10 ? '0' + seconds : seconds;

        display.textContent = minutes + ':' + seconds;

        if (--timer < 0) {
            toggleResendButton(true);

            display.style.display = 'none'; 

            clearInterval(intervalId);
        }
    }, 1000);
}


function resendOTP() {
    toggleResendButton(false); 

    fetch('/resendOTP', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
    })
    .then(response => response.json())
    .then(data => {
       
        console.log(data);

        initTimer(60); 
    })
    .catch(error => {
        console.error('Error:', error);
        toggleResendButton(true); 
    });
}


document.addEventListener('DOMContentLoaded', function () {
    initTimer(60);
}); -->


<!-- </script> -->

<script>

const inputs = document.querySelectorAll("input"),
    button = document.querySelector("button");

    inputs.forEach((input, index1) => {
        input.addEventListener("keyup", (e) => {
            const currentInput = input,
            nextInput = input.nextElementSibling,
            prevInput = input.previousElementSibling;

            if (currentInput.value.length > 1) {
                currentInput.value = "";
                return;
            }

            if (nextInput && nextInput.hasAttribute("disabled") && currentInput.value !== "") {
                nextInput.removeAttribute("disabled");
                nextInput.focus();
            }


            if (e.key === "Backspace") {

                inputs.forEach((input, index2) => {

                if (index1 <= index2 && prevInput) {
                        input.setAttribute("disabled", true);
                        input.value = "";
                        prevInput.focus();
                    }
                });
            }

            if (!inputs[3].disabled && inputs[3].value !== "") {
                button.classList.add("active");
                return;
            }
            button.classList.remove("active");
        });
    });


    window.addEventListener("load", () => inputs[0].focus());


function startTimer() {

const urlParams = new URLSearchParams(window.location.search);
const createdAt = parseInt(urlParams.get("time"), 10); // OTP creation timestamp

const currentTime = Date.now();

const totalOtpTime = 60; // Total time for OTP expiration

const elapsedSeconds = Math.floor((currentTime - createdAt) / 1000); // Calculate elapsed time
let timeLeft = totalOtpTime - elapsedSeconds; // Calculate remaining time

const timerElement = document.getElementById("timer");
const buttonContainer = document.getElementById("button-container");

if (timeLeft <= 0) {

    timerElement.textContent = "Resend OTP";
    document.getElementById("resend-btn").disabled = false;
    buttonContainer.style.display = "block"; // Show the "Resend OTP" button

} else {

    timerElement.textContent = `Resend OTP in ${timeLeft} seconds`;

    const countdown = setInterval(() => {

        if (timeLeft <= 0) {

            clearInterval(countdown);
            timerElement.textContent = "Resend OTP";
            document.getElementById("resend-btn").disabled = false;
            buttonContainer.style.display = "block"; // Show the "Resend OTP" button

        } else {

            timeLeft -= 1; // Decrement time left
            timerElement.textContent = `Resend OTP in ${timeLeft} seconds`;

        }

    }, 1000); // Update the countdown every second
}
}

window.onload = startTimer; // Start the timer when the page loads

</script>
</body>